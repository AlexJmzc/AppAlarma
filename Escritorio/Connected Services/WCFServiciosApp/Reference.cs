//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Escritorio.WCFServiciosApp {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCFServiciosApp.IServiciosApp")]
    public interface IServiciosApp {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/DevolverListaEmpresas", ReplyAction="http://tempuri.org/IServiciosApp/DevolverListaEmpresasResponse")]
        Entidades.Empresa[] DevolverListaEmpresas();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/DevolverListaEmpresas", ReplyAction="http://tempuri.org/IServiciosApp/DevolverListaEmpresasResponse")]
        System.Threading.Tasks.Task<Entidades.Empresa[]> DevolverListaEmpresasAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/DevolverEmpresa", ReplyAction="http://tempuri.org/IServiciosApp/DevolverEmpresaResponse")]
        Entidades.Empresa DevolverEmpresa(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/DevolverEmpresa", ReplyAction="http://tempuri.org/IServiciosApp/DevolverEmpresaResponse")]
        System.Threading.Tasks.Task<Entidades.Empresa> DevolverEmpresaAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/DevolverListaEmpresasEstado", ReplyAction="http://tempuri.org/IServiciosApp/DevolverListaEmpresasEstadoResponse")]
        Entidades.Empresa[] DevolverListaEmpresasEstado(string estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/DevolverListaEmpresasEstado", ReplyAction="http://tempuri.org/IServiciosApp/DevolverListaEmpresasEstadoResponse")]
        System.Threading.Tasks.Task<Entidades.Empresa[]> DevolverListaEmpresasEstadoAsync(string estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/DevolverListaUsuarios", ReplyAction="http://tempuri.org/IServiciosApp/DevolverListaUsuariosResponse")]
        Entidades.Usuario[] DevolverListaUsuarios();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/DevolverListaUsuarios", ReplyAction="http://tempuri.org/IServiciosApp/DevolverListaUsuariosResponse")]
        System.Threading.Tasks.Task<Entidades.Usuario[]> DevolverListaUsuariosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/DevolverListaUsuariosEmpresa", ReplyAction="http://tempuri.org/IServiciosApp/DevolverListaUsuariosEmpresaResponse")]
        Entidades.Usuario[] DevolverListaUsuariosEmpresa(int idEmpresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/DevolverListaUsuariosEmpresa", ReplyAction="http://tempuri.org/IServiciosApp/DevolverListaUsuariosEmpresaResponse")]
        System.Threading.Tasks.Task<Entidades.Usuario[]> DevolverListaUsuariosEmpresaAsync(int idEmpresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/DevolverUsuarioNombreUsu", ReplyAction="http://tempuri.org/IServiciosApp/DevolverUsuarioNombreUsuResponse")]
        Entidades.Usuario DevolverUsuarioNombreUsu(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/DevolverUsuarioNombreUsu", ReplyAction="http://tempuri.org/IServiciosApp/DevolverUsuarioNombreUsuResponse")]
        System.Threading.Tasks.Task<Entidades.Usuario> DevolverUsuarioNombreUsuAsync(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/DevolverUsuarioCedula", ReplyAction="http://tempuri.org/IServiciosApp/DevolverUsuarioCedulaResponse")]
        Entidades.Usuario DevolverUsuarioCedula(string cedula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/DevolverUsuarioCedula", ReplyAction="http://tempuri.org/IServiciosApp/DevolverUsuarioCedulaResponse")]
        System.Threading.Tasks.Task<Entidades.Usuario> DevolverUsuarioCedulaAsync(string cedula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/DevolverListaUsuariosEstado", ReplyAction="http://tempuri.org/IServiciosApp/DevolverListaUsuariosEstadoResponse")]
        Entidades.Usuario[] DevolverListaUsuariosEstado(string estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/DevolverListaUsuariosEstado", ReplyAction="http://tempuri.org/IServiciosApp/DevolverListaUsuariosEstadoResponse")]
        System.Threading.Tasks.Task<Entidades.Usuario[]> DevolverListaUsuariosEstadoAsync(string estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/DevolverUsuarioID", ReplyAction="http://tempuri.org/IServiciosApp/DevolverUsuarioIDResponse")]
        Entidades.Usuario DevolverUsuarioID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/DevolverUsuarioID", ReplyAction="http://tempuri.org/IServiciosApp/DevolverUsuarioIDResponse")]
        System.Threading.Tasks.Task<Entidades.Usuario> DevolverUsuarioIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/DevolverListaIncidencias", ReplyAction="http://tempuri.org/IServiciosApp/DevolverListaIncidenciasResponse")]
        Entidades.Incidencia[] DevolverListaIncidencias();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/DevolverListaIncidencias", ReplyAction="http://tempuri.org/IServiciosApp/DevolverListaIncidenciasResponse")]
        System.Threading.Tasks.Task<Entidades.Incidencia[]> DevolverListaIncidenciasAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/DevolverListaIncidenciasEmpresa", ReplyAction="http://tempuri.org/IServiciosApp/DevolverListaIncidenciasEmpresaResponse")]
        Entidades.Incidencia[] DevolverListaIncidenciasEmpresa(int idEmpresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/DevolverListaIncidenciasEmpresa", ReplyAction="http://tempuri.org/IServiciosApp/DevolverListaIncidenciasEmpresaResponse")]
        System.Threading.Tasks.Task<Entidades.Incidencia[]> DevolverListaIncidenciasEmpresaAsync(int idEmpresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/DevolverListaIncidenciasUsuario", ReplyAction="http://tempuri.org/IServiciosApp/DevolverListaIncidenciasUsuarioResponse")]
        Entidades.Incidencia[] DevolverListaIncidenciasUsuario(int idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/DevolverListaIncidenciasUsuario", ReplyAction="http://tempuri.org/IServiciosApp/DevolverListaIncidenciasUsuarioResponse")]
        System.Threading.Tasks.Task<Entidades.Incidencia[]> DevolverListaIncidenciasUsuarioAsync(int idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/DevolverListaIncidenciasNombreEmpresa", ReplyAction="http://tempuri.org/IServiciosApp/DevolverListaIncidenciasNombreEmpresaResponse")]
        Entidades.Incidencia[] DevolverListaIncidenciasNombreEmpresa(string nombreEmpresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/DevolverListaIncidenciasNombreEmpresa", ReplyAction="http://tempuri.org/IServiciosApp/DevolverListaIncidenciasNombreEmpresaResponse")]
        System.Threading.Tasks.Task<Entidades.Incidencia[]> DevolverListaIncidenciasNombreEmpresaAsync(string nombreEmpresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/DevolverListaIncidenciasFecha", ReplyAction="http://tempuri.org/IServiciosApp/DevolverListaIncidenciasFechaResponse")]
        Entidades.Incidencia[] DevolverListaIncidenciasFecha(string fecha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/DevolverListaIncidenciasFecha", ReplyAction="http://tempuri.org/IServiciosApp/DevolverListaIncidenciasFechaResponse")]
        System.Threading.Tasks.Task<Entidades.Incidencia[]> DevolverListaIncidenciasFechaAsync(string fecha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/DevolverListaIncidenciasCoordenadas", ReplyAction="http://tempuri.org/IServiciosApp/DevolverListaIncidenciasCoordenadasResponse")]
        Entidades.Incidencia[] DevolverListaIncidenciasCoordenadas(string coordenadasEmpresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/DevolverListaIncidenciasCoordenadas", ReplyAction="http://tempuri.org/IServiciosApp/DevolverListaIncidenciasCoordenadasResponse")]
        System.Threading.Tasks.Task<Entidades.Incidencia[]> DevolverListaIncidenciasCoordenadasAsync(string coordenadasEmpresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/DevolverListaIncidenciasEstado", ReplyAction="http://tempuri.org/IServiciosApp/DevolverListaIncidenciasEstadoResponse")]
        Entidades.Incidencia[] DevolverListaIncidenciasEstado(string estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/DevolverListaIncidenciasEstado", ReplyAction="http://tempuri.org/IServiciosApp/DevolverListaIncidenciasEstadoResponse")]
        System.Threading.Tasks.Task<Entidades.Incidencia[]> DevolverListaIncidenciasEstadoAsync(string estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/DevolverIncidenciaID", ReplyAction="http://tempuri.org/IServiciosApp/DevolverIncidenciaIDResponse")]
        Entidades.Incidencia DevolverIncidenciaID(int idIncidencia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/DevolverIncidenciaID", ReplyAction="http://tempuri.org/IServiciosApp/DevolverIncidenciaIDResponse")]
        System.Threading.Tasks.Task<Entidades.Incidencia> DevolverIncidenciaIDAsync(int idIncidencia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/DevolverListaIncidenciasEstadoFecha", ReplyAction="http://tempuri.org/IServiciosApp/DevolverListaIncidenciasEstadoFechaResponse")]
        Entidades.Incidencia[] DevolverListaIncidenciasEstadoFecha(string estado, string fecha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/DevolverListaIncidenciasEstadoFecha", ReplyAction="http://tempuri.org/IServiciosApp/DevolverListaIncidenciasEstadoFechaResponse")]
        System.Threading.Tasks.Task<Entidades.Incidencia[]> DevolverListaIncidenciasEstadoFechaAsync(string estado, string fecha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/DevolverListaIncidenciasEmpresaFecha", ReplyAction="http://tempuri.org/IServiciosApp/DevolverListaIncidenciasEmpresaFechaResponse")]
        Entidades.Incidencia[] DevolverListaIncidenciasEmpresaFecha(string nombre, string fecha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/DevolverListaIncidenciasEmpresaFecha", ReplyAction="http://tempuri.org/IServiciosApp/DevolverListaIncidenciasEmpresaFechaResponse")]
        System.Threading.Tasks.Task<Entidades.Incidencia[]> DevolverListaIncidenciasEmpresaFechaAsync(string nombre, string fecha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/DevolverListaIncidenciasEmpresaEstado", ReplyAction="http://tempuri.org/IServiciosApp/DevolverListaIncidenciasEmpresaEstadoResponse")]
        Entidades.Incidencia[] DevolverListaIncidenciasEmpresaEstado(string nombre, string estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/DevolverListaIncidenciasEmpresaEstado", ReplyAction="http://tempuri.org/IServiciosApp/DevolverListaIncidenciasEmpresaEstadoResponse")]
        System.Threading.Tasks.Task<Entidades.Incidencia[]> DevolverListaIncidenciasEmpresaEstadoAsync(string nombre, string estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/DevolverListaIncidenciasEmpresaEstadoFecha", ReplyAction="http://tempuri.org/IServiciosApp/DevolverListaIncidenciasEmpresaEstadoFechaRespon" +
            "se")]
        Entidades.Incidencia[] DevolverListaIncidenciasEmpresaEstadoFecha(string nombre, string estado, string fecha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/DevolverListaIncidenciasEmpresaEstadoFecha", ReplyAction="http://tempuri.org/IServiciosApp/DevolverListaIncidenciasEmpresaEstadoFechaRespon" +
            "se")]
        System.Threading.Tasks.Task<Entidades.Incidencia[]> DevolverListaIncidenciasEmpresaEstadoFechaAsync(string nombre, string estado, string fecha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/DevolverListaDirecciones", ReplyAction="http://tempuri.org/IServiciosApp/DevolverListaDireccionesResponse")]
        Entidades.Direcciones[] DevolverListaDirecciones();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/DevolverListaDirecciones", ReplyAction="http://tempuri.org/IServiciosApp/DevolverListaDireccionesResponse")]
        System.Threading.Tasks.Task<Entidades.Direcciones[]> DevolverListaDireccionesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/DevolverDireccion", ReplyAction="http://tempuri.org/IServiciosApp/DevolverDireccionResponse")]
        Entidades.Direcciones DevolverDireccion(string direccion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/DevolverDireccion", ReplyAction="http://tempuri.org/IServiciosApp/DevolverDireccionResponse")]
        System.Threading.Tasks.Task<Entidades.Direcciones> DevolverDireccionAsync(string direccion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/NuevaEmpresa", ReplyAction="http://tempuri.org/IServiciosApp/NuevaEmpresaResponse")]
        Entidades.Empresa NuevaEmpresa(string nombreEmpresa, string direccionEmpresa, string coordenadasEmpresa, string descripcionEmpresa, string telefonoEmpresa, string estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/NuevaEmpresa", ReplyAction="http://tempuri.org/IServiciosApp/NuevaEmpresaResponse")]
        System.Threading.Tasks.Task<Entidades.Empresa> NuevaEmpresaAsync(string nombreEmpresa, string direccionEmpresa, string coordenadasEmpresa, string descripcionEmpresa, string telefonoEmpresa, string estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/NuevaIncidencia", ReplyAction="http://tempuri.org/IServiciosApp/NuevaIncidenciaResponse")]
        Entidades.Incidencia NuevaIncidencia(int idUsuario, int idEmpresa, string nombreEmpresa, string coordenadasEmpresa, System.DateTime fecha, string estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/NuevaIncidencia", ReplyAction="http://tempuri.org/IServiciosApp/NuevaIncidenciaResponse")]
        System.Threading.Tasks.Task<Entidades.Incidencia> NuevaIncidenciaAsync(int idUsuario, int idEmpresa, string nombreEmpresa, string coordenadasEmpresa, System.DateTime fecha, string estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/NuevoUsuario", ReplyAction="http://tempuri.org/IServiciosApp/NuevoUsuarioResponse")]
        Entidades.Usuario NuevoUsuario(string nombreUsuario, string claveUsuario, string rolUsuario, string cedula, string nombre, string apellido, string telefono, int idEmpresa, string estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/NuevoUsuario", ReplyAction="http://tempuri.org/IServiciosApp/NuevoUsuarioResponse")]
        System.Threading.Tasks.Task<Entidades.Usuario> NuevoUsuarioAsync(string nombreUsuario, string claveUsuario, string rolUsuario, string cedula, string nombre, string apellido, string telefono, int idEmpresa, string estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/ActualizarEmpresa", ReplyAction="http://tempuri.org/IServiciosApp/ActualizarEmpresaResponse")]
        Entidades.Empresa ActualizarEmpresa(int idEmpresa, string nombreEmpresa, string direccionEmpresa, string coordenadasEmpresa, string descripcionEmpresa, string telefonoEmpresa, string estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/ActualizarEmpresa", ReplyAction="http://tempuri.org/IServiciosApp/ActualizarEmpresaResponse")]
        System.Threading.Tasks.Task<Entidades.Empresa> ActualizarEmpresaAsync(int idEmpresa, string nombreEmpresa, string direccionEmpresa, string coordenadasEmpresa, string descripcionEmpresa, string telefonoEmpresa, string estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/ActualizarEstadoEmpresa", ReplyAction="http://tempuri.org/IServiciosApp/ActualizarEstadoEmpresaResponse")]
        Entidades.Empresa ActualizarEstadoEmpresa(int idEmpresa, string nombreEmpresa, string direccionEmpresa, string coordenadasEmpresa, string descripcionEmpresa, string telefonoEmpresa, string estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/ActualizarEstadoEmpresa", ReplyAction="http://tempuri.org/IServiciosApp/ActualizarEstadoEmpresaResponse")]
        System.Threading.Tasks.Task<Entidades.Empresa> ActualizarEstadoEmpresaAsync(int idEmpresa, string nombreEmpresa, string direccionEmpresa, string coordenadasEmpresa, string descripcionEmpresa, string telefonoEmpresa, string estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/ActualizarUsuario", ReplyAction="http://tempuri.org/IServiciosApp/ActualizarUsuarioResponse")]
        Entidades.Usuario ActualizarUsuario(int idUsuario, string nombreUsuario, string claveUsuario, string rolUsuario, string cedula, string nombre, string apellido, string telefono, int idEmpresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/ActualizarUsuario", ReplyAction="http://tempuri.org/IServiciosApp/ActualizarUsuarioResponse")]
        System.Threading.Tasks.Task<Entidades.Usuario> ActualizarUsuarioAsync(int idUsuario, string nombreUsuario, string claveUsuario, string rolUsuario, string cedula, string nombre, string apellido, string telefono, int idEmpresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/ActualizarEstado", ReplyAction="http://tempuri.org/IServiciosApp/ActualizarEstadoResponse")]
        void ActualizarEstado(int idIncidencia, string estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/ActualizarEstado", ReplyAction="http://tempuri.org/IServiciosApp/ActualizarEstadoResponse")]
        System.Threading.Tasks.Task ActualizarEstadoAsync(int idIncidencia, string estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/EliminarEmpresa", ReplyAction="http://tempuri.org/IServiciosApp/EliminarEmpresaResponse")]
        void EliminarEmpresa(int idEmpresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/EliminarEmpresa", ReplyAction="http://tempuri.org/IServiciosApp/EliminarEmpresaResponse")]
        System.Threading.Tasks.Task EliminarEmpresaAsync(int idEmpresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/EliminarUsuario", ReplyAction="http://tempuri.org/IServiciosApp/EliminarUsuarioResponse")]
        void EliminarUsuario(int idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/EliminarUsuario", ReplyAction="http://tempuri.org/IServiciosApp/EliminarUsuarioResponse")]
        System.Threading.Tasks.Task EliminarUsuarioAsync(int idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/EliminarIncidencia", ReplyAction="http://tempuri.org/IServiciosApp/EliminarIncidenciaResponse")]
        void EliminarIncidencia(int idIncidencia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/EliminarIncidencia", ReplyAction="http://tempuri.org/IServiciosApp/EliminarIncidenciaResponse")]
        System.Threading.Tasks.Task EliminarIncidenciaAsync(int idIncidencia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/IniciarSesion", ReplyAction="http://tempuri.org/IServiciosApp/IniciarSesionResponse")]
        bool IniciarSesion(string usuario, string clave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosApp/IniciarSesion", ReplyAction="http://tempuri.org/IServiciosApp/IniciarSesionResponse")]
        System.Threading.Tasks.Task<bool> IniciarSesionAsync(string usuario, string clave);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiciosAppChannel : Escritorio.WCFServiciosApp.IServiciosApp, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiciosAppClient : System.ServiceModel.ClientBase<Escritorio.WCFServiciosApp.IServiciosApp>, Escritorio.WCFServiciosApp.IServiciosApp {
        
        public ServiciosAppClient() {
        }
        
        public ServiciosAppClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiciosAppClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiciosAppClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiciosAppClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Entidades.Empresa[] DevolverListaEmpresas() {
            return base.Channel.DevolverListaEmpresas();
        }
        
        public System.Threading.Tasks.Task<Entidades.Empresa[]> DevolverListaEmpresasAsync() {
            return base.Channel.DevolverListaEmpresasAsync();
        }
        
        public Entidades.Empresa DevolverEmpresa(int id) {
            return base.Channel.DevolverEmpresa(id);
        }
        
        public System.Threading.Tasks.Task<Entidades.Empresa> DevolverEmpresaAsync(int id) {
            return base.Channel.DevolverEmpresaAsync(id);
        }
        
        public Entidades.Empresa[] DevolverListaEmpresasEstado(string estado) {
            return base.Channel.DevolverListaEmpresasEstado(estado);
        }
        
        public System.Threading.Tasks.Task<Entidades.Empresa[]> DevolverListaEmpresasEstadoAsync(string estado) {
            return base.Channel.DevolverListaEmpresasEstadoAsync(estado);
        }
        
        public Entidades.Usuario[] DevolverListaUsuarios() {
            return base.Channel.DevolverListaUsuarios();
        }
        
        public System.Threading.Tasks.Task<Entidades.Usuario[]> DevolverListaUsuariosAsync() {
            return base.Channel.DevolverListaUsuariosAsync();
        }
        
        public Entidades.Usuario[] DevolverListaUsuariosEmpresa(int idEmpresa) {
            return base.Channel.DevolverListaUsuariosEmpresa(idEmpresa);
        }
        
        public System.Threading.Tasks.Task<Entidades.Usuario[]> DevolverListaUsuariosEmpresaAsync(int idEmpresa) {
            return base.Channel.DevolverListaUsuariosEmpresaAsync(idEmpresa);
        }
        
        public Entidades.Usuario DevolverUsuarioNombreUsu(string nombreUsuario) {
            return base.Channel.DevolverUsuarioNombreUsu(nombreUsuario);
        }
        
        public System.Threading.Tasks.Task<Entidades.Usuario> DevolverUsuarioNombreUsuAsync(string nombreUsuario) {
            return base.Channel.DevolverUsuarioNombreUsuAsync(nombreUsuario);
        }
        
        public Entidades.Usuario DevolverUsuarioCedula(string cedula) {
            return base.Channel.DevolverUsuarioCedula(cedula);
        }
        
        public System.Threading.Tasks.Task<Entidades.Usuario> DevolverUsuarioCedulaAsync(string cedula) {
            return base.Channel.DevolverUsuarioCedulaAsync(cedula);
        }
        
        public Entidades.Usuario[] DevolverListaUsuariosEstado(string estado) {
            return base.Channel.DevolverListaUsuariosEstado(estado);
        }
        
        public System.Threading.Tasks.Task<Entidades.Usuario[]> DevolverListaUsuariosEstadoAsync(string estado) {
            return base.Channel.DevolverListaUsuariosEstadoAsync(estado);
        }
        
        public Entidades.Usuario DevolverUsuarioID(int id) {
            return base.Channel.DevolverUsuarioID(id);
        }
        
        public System.Threading.Tasks.Task<Entidades.Usuario> DevolverUsuarioIDAsync(int id) {
            return base.Channel.DevolverUsuarioIDAsync(id);
        }
        
        public Entidades.Incidencia[] DevolverListaIncidencias() {
            return base.Channel.DevolverListaIncidencias();
        }
        
        public System.Threading.Tasks.Task<Entidades.Incidencia[]> DevolverListaIncidenciasAsync() {
            return base.Channel.DevolverListaIncidenciasAsync();
        }
        
        public Entidades.Incidencia[] DevolverListaIncidenciasEmpresa(int idEmpresa) {
            return base.Channel.DevolverListaIncidenciasEmpresa(idEmpresa);
        }
        
        public System.Threading.Tasks.Task<Entidades.Incidencia[]> DevolverListaIncidenciasEmpresaAsync(int idEmpresa) {
            return base.Channel.DevolverListaIncidenciasEmpresaAsync(idEmpresa);
        }
        
        public Entidades.Incidencia[] DevolverListaIncidenciasUsuario(int idUsuario) {
            return base.Channel.DevolverListaIncidenciasUsuario(idUsuario);
        }
        
        public System.Threading.Tasks.Task<Entidades.Incidencia[]> DevolverListaIncidenciasUsuarioAsync(int idUsuario) {
            return base.Channel.DevolverListaIncidenciasUsuarioAsync(idUsuario);
        }
        
        public Entidades.Incidencia[] DevolverListaIncidenciasNombreEmpresa(string nombreEmpresa) {
            return base.Channel.DevolverListaIncidenciasNombreEmpresa(nombreEmpresa);
        }
        
        public System.Threading.Tasks.Task<Entidades.Incidencia[]> DevolverListaIncidenciasNombreEmpresaAsync(string nombreEmpresa) {
            return base.Channel.DevolverListaIncidenciasNombreEmpresaAsync(nombreEmpresa);
        }
        
        public Entidades.Incidencia[] DevolverListaIncidenciasFecha(string fecha) {
            return base.Channel.DevolverListaIncidenciasFecha(fecha);
        }
        
        public System.Threading.Tasks.Task<Entidades.Incidencia[]> DevolverListaIncidenciasFechaAsync(string fecha) {
            return base.Channel.DevolverListaIncidenciasFechaAsync(fecha);
        }
        
        public Entidades.Incidencia[] DevolverListaIncidenciasCoordenadas(string coordenadasEmpresa) {
            return base.Channel.DevolverListaIncidenciasCoordenadas(coordenadasEmpresa);
        }
        
        public System.Threading.Tasks.Task<Entidades.Incidencia[]> DevolverListaIncidenciasCoordenadasAsync(string coordenadasEmpresa) {
            return base.Channel.DevolverListaIncidenciasCoordenadasAsync(coordenadasEmpresa);
        }
        
        public Entidades.Incidencia[] DevolverListaIncidenciasEstado(string estado) {
            return base.Channel.DevolverListaIncidenciasEstado(estado);
        }
        
        public System.Threading.Tasks.Task<Entidades.Incidencia[]> DevolverListaIncidenciasEstadoAsync(string estado) {
            return base.Channel.DevolverListaIncidenciasEstadoAsync(estado);
        }
        
        public Entidades.Incidencia DevolverIncidenciaID(int idIncidencia) {
            return base.Channel.DevolverIncidenciaID(idIncidencia);
        }
        
        public System.Threading.Tasks.Task<Entidades.Incidencia> DevolverIncidenciaIDAsync(int idIncidencia) {
            return base.Channel.DevolverIncidenciaIDAsync(idIncidencia);
        }
        
        public Entidades.Incidencia[] DevolverListaIncidenciasEstadoFecha(string estado, string fecha) {
            return base.Channel.DevolverListaIncidenciasEstadoFecha(estado, fecha);
        }
        
        public System.Threading.Tasks.Task<Entidades.Incidencia[]> DevolverListaIncidenciasEstadoFechaAsync(string estado, string fecha) {
            return base.Channel.DevolverListaIncidenciasEstadoFechaAsync(estado, fecha);
        }
        
        public Entidades.Incidencia[] DevolverListaIncidenciasEmpresaFecha(string nombre, string fecha) {
            return base.Channel.DevolverListaIncidenciasEmpresaFecha(nombre, fecha);
        }
        
        public System.Threading.Tasks.Task<Entidades.Incidencia[]> DevolverListaIncidenciasEmpresaFechaAsync(string nombre, string fecha) {
            return base.Channel.DevolverListaIncidenciasEmpresaFechaAsync(nombre, fecha);
        }
        
        public Entidades.Incidencia[] DevolverListaIncidenciasEmpresaEstado(string nombre, string estado) {
            return base.Channel.DevolverListaIncidenciasEmpresaEstado(nombre, estado);
        }
        
        public System.Threading.Tasks.Task<Entidades.Incidencia[]> DevolverListaIncidenciasEmpresaEstadoAsync(string nombre, string estado) {
            return base.Channel.DevolverListaIncidenciasEmpresaEstadoAsync(nombre, estado);
        }
        
        public Entidades.Incidencia[] DevolverListaIncidenciasEmpresaEstadoFecha(string nombre, string estado, string fecha) {
            return base.Channel.DevolverListaIncidenciasEmpresaEstadoFecha(nombre, estado, fecha);
        }
        
        public System.Threading.Tasks.Task<Entidades.Incidencia[]> DevolverListaIncidenciasEmpresaEstadoFechaAsync(string nombre, string estado, string fecha) {
            return base.Channel.DevolverListaIncidenciasEmpresaEstadoFechaAsync(nombre, estado, fecha);
        }
        
        public Entidades.Direcciones[] DevolverListaDirecciones() {
            return base.Channel.DevolverListaDirecciones();
        }
        
        public System.Threading.Tasks.Task<Entidades.Direcciones[]> DevolverListaDireccionesAsync() {
            return base.Channel.DevolverListaDireccionesAsync();
        }
        
        public Entidades.Direcciones DevolverDireccion(string direccion) {
            return base.Channel.DevolverDireccion(direccion);
        }
        
        public System.Threading.Tasks.Task<Entidades.Direcciones> DevolverDireccionAsync(string direccion) {
            return base.Channel.DevolverDireccionAsync(direccion);
        }
        
        public Entidades.Empresa NuevaEmpresa(string nombreEmpresa, string direccionEmpresa, string coordenadasEmpresa, string descripcionEmpresa, string telefonoEmpresa, string estado) {
            return base.Channel.NuevaEmpresa(nombreEmpresa, direccionEmpresa, coordenadasEmpresa, descripcionEmpresa, telefonoEmpresa, estado);
        }
        
        public System.Threading.Tasks.Task<Entidades.Empresa> NuevaEmpresaAsync(string nombreEmpresa, string direccionEmpresa, string coordenadasEmpresa, string descripcionEmpresa, string telefonoEmpresa, string estado) {
            return base.Channel.NuevaEmpresaAsync(nombreEmpresa, direccionEmpresa, coordenadasEmpresa, descripcionEmpresa, telefonoEmpresa, estado);
        }
        
        public Entidades.Incidencia NuevaIncidencia(int idUsuario, int idEmpresa, string nombreEmpresa, string coordenadasEmpresa, System.DateTime fecha, string estado) {
            return base.Channel.NuevaIncidencia(idUsuario, idEmpresa, nombreEmpresa, coordenadasEmpresa, fecha, estado);
        }
        
        public System.Threading.Tasks.Task<Entidades.Incidencia> NuevaIncidenciaAsync(int idUsuario, int idEmpresa, string nombreEmpresa, string coordenadasEmpresa, System.DateTime fecha, string estado) {
            return base.Channel.NuevaIncidenciaAsync(idUsuario, idEmpresa, nombreEmpresa, coordenadasEmpresa, fecha, estado);
        }
        
        public Entidades.Usuario NuevoUsuario(string nombreUsuario, string claveUsuario, string rolUsuario, string cedula, string nombre, string apellido, string telefono, int idEmpresa, string estado) {
            return base.Channel.NuevoUsuario(nombreUsuario, claveUsuario, rolUsuario, cedula, nombre, apellido, telefono, idEmpresa, estado);
        }
        
        public System.Threading.Tasks.Task<Entidades.Usuario> NuevoUsuarioAsync(string nombreUsuario, string claveUsuario, string rolUsuario, string cedula, string nombre, string apellido, string telefono, int idEmpresa, string estado) {
            return base.Channel.NuevoUsuarioAsync(nombreUsuario, claveUsuario, rolUsuario, cedula, nombre, apellido, telefono, idEmpresa, estado);
        }
        
        public Entidades.Empresa ActualizarEmpresa(int idEmpresa, string nombreEmpresa, string direccionEmpresa, string coordenadasEmpresa, string descripcionEmpresa, string telefonoEmpresa, string estado) {
            return base.Channel.ActualizarEmpresa(idEmpresa, nombreEmpresa, direccionEmpresa, coordenadasEmpresa, descripcionEmpresa, telefonoEmpresa, estado);
        }
        
        public System.Threading.Tasks.Task<Entidades.Empresa> ActualizarEmpresaAsync(int idEmpresa, string nombreEmpresa, string direccionEmpresa, string coordenadasEmpresa, string descripcionEmpresa, string telefonoEmpresa, string estado) {
            return base.Channel.ActualizarEmpresaAsync(idEmpresa, nombreEmpresa, direccionEmpresa, coordenadasEmpresa, descripcionEmpresa, telefonoEmpresa, estado);
        }
        
        public Entidades.Empresa ActualizarEstadoEmpresa(int idEmpresa, string nombreEmpresa, string direccionEmpresa, string coordenadasEmpresa, string descripcionEmpresa, string telefonoEmpresa, string estado) {
            return base.Channel.ActualizarEstadoEmpresa(idEmpresa, nombreEmpresa, direccionEmpresa, coordenadasEmpresa, descripcionEmpresa, telefonoEmpresa, estado);
        }
        
        public System.Threading.Tasks.Task<Entidades.Empresa> ActualizarEstadoEmpresaAsync(int idEmpresa, string nombreEmpresa, string direccionEmpresa, string coordenadasEmpresa, string descripcionEmpresa, string telefonoEmpresa, string estado) {
            return base.Channel.ActualizarEstadoEmpresaAsync(idEmpresa, nombreEmpresa, direccionEmpresa, coordenadasEmpresa, descripcionEmpresa, telefonoEmpresa, estado);
        }
        
        public Entidades.Usuario ActualizarUsuario(int idUsuario, string nombreUsuario, string claveUsuario, string rolUsuario, string cedula, string nombre, string apellido, string telefono, int idEmpresa) {
            return base.Channel.ActualizarUsuario(idUsuario, nombreUsuario, claveUsuario, rolUsuario, cedula, nombre, apellido, telefono, idEmpresa);
        }
        
        public System.Threading.Tasks.Task<Entidades.Usuario> ActualizarUsuarioAsync(int idUsuario, string nombreUsuario, string claveUsuario, string rolUsuario, string cedula, string nombre, string apellido, string telefono, int idEmpresa) {
            return base.Channel.ActualizarUsuarioAsync(idUsuario, nombreUsuario, claveUsuario, rolUsuario, cedula, nombre, apellido, telefono, idEmpresa);
        }
        
        public void ActualizarEstado(int idIncidencia, string estado) {
            base.Channel.ActualizarEstado(idIncidencia, estado);
        }
        
        public System.Threading.Tasks.Task ActualizarEstadoAsync(int idIncidencia, string estado) {
            return base.Channel.ActualizarEstadoAsync(idIncidencia, estado);
        }
        
        public void EliminarEmpresa(int idEmpresa) {
            base.Channel.EliminarEmpresa(idEmpresa);
        }
        
        public System.Threading.Tasks.Task EliminarEmpresaAsync(int idEmpresa) {
            return base.Channel.EliminarEmpresaAsync(idEmpresa);
        }
        
        public void EliminarUsuario(int idUsuario) {
            base.Channel.EliminarUsuario(idUsuario);
        }
        
        public System.Threading.Tasks.Task EliminarUsuarioAsync(int idUsuario) {
            return base.Channel.EliminarUsuarioAsync(idUsuario);
        }
        
        public void EliminarIncidencia(int idIncidencia) {
            base.Channel.EliminarIncidencia(idIncidencia);
        }
        
        public System.Threading.Tasks.Task EliminarIncidenciaAsync(int idIncidencia) {
            return base.Channel.EliminarIncidenciaAsync(idIncidencia);
        }
        
        public bool IniciarSesion(string usuario, string clave) {
            return base.Channel.IniciarSesion(usuario, clave);
        }
        
        public System.Threading.Tasks.Task<bool> IniciarSesionAsync(string usuario, string clave) {
            return base.Channel.IniciarSesionAsync(usuario, clave);
        }
    }
}
